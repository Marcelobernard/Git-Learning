import tkinter as tk
import sqlite3

#começar com tela com um botão e um entry (nome)- v1 ---------
#adicionar mais duas entrys (cpf e estado) e suas labels - v2 ------
#mudar o fundo para uma imagem mais bonita, adicionar readme.txt explicando como usar - v3 --------
#adicionar clicar no botão salva os 3 dados em um sqlite - v4 -------
#Criar uma branch em que le um config.txt com uma lista de 5 estados possiveis separados por pular linha - x1
#Mudar o separador para ; e adicionar mais 5 estados - x2
#Voltar para main, criar outra branch e criar um dropdown com 3 opções (clt, mei, socio) - y1
#Voltar para main, Corrigir o bug da função de cpf - v5
#Merge de x com v - v6
#Adicionar verificação de CPF e de estado, com base na função cpf e na lista de estados .txt antes de adicionar no sqlite v7

# Cria conexão
connection = sqlite3.connect("teste.db")

# Cria o cursor e cria a tabela
cursor = connection.cursor()
cursor.execute("CREATE TABLE IF NOT EXISTS Tabela1 (nome TEXT, cpf TEXT, estado TEXT)")

def VerificarCPF(CPF):
    # CPF deve ser na forma "123.456.789-10"
    cpfinal = CPF.replace(".", "").replace("-", "")
    if len(cpfinal) != 11 or not cpfinal.isdigit():
        return False, None
    else:
        cpf_formatado = f"{cpfinal[:3]}.{cpfinal[3:6]}.{cpfinal[6:9]}-{cpfinal[9:]}"
        return True, cpf_formatado

def inserevalores(Valor1, Valor2, Valor3):
    # Insere linha na tabela
    cursor.execute("INSERT INTO Tabela1 VALUES (?, ?, ?)", (Valor1, Valor2, Valor3))
    connection.commit()

def pegavalores():
    # Pega valores da tabela
    rows = cursor.execute("SELECT * FROM Tabela1").fetchall()
    print(rows)

def funcExemplo(e1, e2, e3):
    cpf = e2.get()
    cpf_valido, cpf_formatado = VerificarCPF(cpf)
    if cpf_valido:  # Verifica se o CPF é válido antes de prosseguir
        nome = e1.get()
        estado = e3.get()
        inserevalores(nome, cpf_formatado, estado)
        pegavalores()
    else:
        print("CPF inválido")

def Main():
    root = tk.Tk()
    root.title("Trabalho RAD")
    largura = 600
    altura = 600
    pos_x = 100
    pos_y = 50
    root.geometry(f"{largura}x{altura}+{pos_x}+{pos_y}")
    root.resizable(False, False)
    
    bg = tk.PhotoImage(file="nevoa1.gif")
    label111 = tk.Label(root, image=bg)
    label111.place(x=0, y=0)
    
    label1 = tk.Label(root, text="Nome")
    e1 = tk.Entry(root)
    label1.pack()
    e1.pack()
    
    label2 = tk.Label(root, text="CPF")
    e2 = tk.Entry(root)
    label2.pack()
    e2.pack()
    
    label3 = tk.Label(root, text="Estado")
    e3 = tk.Entry(root)
    label3.pack()
    e3.pack()
    
    test2 = tk.Button(root, text="Salvar", command=lambda: funcExemplo(e1, e2, e3))
    test2.pack()

    root.iconify()
    root.update()
    root.deiconify()
    root.mainloop()

Main()
