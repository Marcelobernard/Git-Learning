import tkinter as tk
import sqlite3

connection = sqlite3.connect("teste.db")

cursor = connection.cursor()
cursor.execute("CREATE TABLE IF NOT EXISTS Tabela1 (nome TEXT, cpf TEXT, estado TEXT)")

def VerificarCPF(CPF):
    # CPF deve ser na forma "123.456.789-10"
    cpfinal = CPF.replace(".", "").replace("-", "")
    if len(cpfinal) != 11 or not cpfinal.isdigit():
        return False, None
    else:
        cpf_formatado = f"{cpfinal[:3]}.{cpfinal[3:6]}.{cpfinal[6:9]}-{cpfinal[9:]}"
        return True, cpf_formatado
    
def verificarEstado(estado):
    with open("config.txt", "r") as file:
        estados_validos = file.read().split(";")
    estado = estado.strip().upper()
    return estado in estados_validos

def inserevalores(Valor1, Valor2, Valor3):
    cursor.execute("INSERT INTO Tabela1 VALUES (?, ?, ?)", (Valor1, Valor2, Valor3))
    connection.commit()

def pegavalores():
    rows = cursor.execute("SELECT * FROM Tabela1").fetchall()
    print(rows)

def funcExemplo(e1, e2, e3):
    cpf = e2.get()
    cpf_valido, cpf_formatado = VerificarCPF(cpf)
    estado = e3.get()
    if cpf_valido and verificarEstado(estado):
        nome = e1.get()
        estado = e3.get()
        inserevalores(nome, cpf_formatado, estado)
        pegavalores()
    else:
        print("CPF inválido ou estado inválido")

def Main():
    root = tk.Tk()
    root.title("Trabalho RAD")
    largura = 600
    altura = 600
    pos_x = 100
    pos_y = 50
    root.geometry(f"{largura}x{altura}+{pos_x}+{pos_y}")
    root.resizable(False, False)
    
    bg = tk.PhotoImage(file="nevoa1.gif")
    label111 = tk.Label(root, image=bg)
    label111.place(x=0, y=0)
    
    label1 = tk.Label(root, text="Nome")
    e1 = tk.Entry(root)
    label1.pack()
    e1.pack()
    
    label2 = tk.Label(root, text="CPF")
    e2 = tk.Entry(root)
    label2.pack()
    e2.pack()
    
    label3 = tk.Label(root, text="Estado")
    e3 = tk.Entry(root)
    label3.pack()
    e3.pack()
    
    test2 = tk.Button(root, text="Salvar", command=lambda: funcExemplo(e1, e2, e3))
    test2.pack()

    root.iconify()
    root.update()
    root.deiconify()
    root.mainloop()

Main()
